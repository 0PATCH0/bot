import discord
from discord.ext import commands, tasks
from discord import app_commands
import logging
from datetime import datetime, timedelta
import asyncio

logger = logging.getLogger(__name__)

class EventScheduler(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.events = {}

    @app_commands.command(name="add_event", description="–î–æ–¥–∞—î –ø–æ–¥—ñ—é –∑ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è–º.")
    async def add_event(self, interaction: discord.Interaction, time: str, *, description: str, channel: discord.TextChannel):
        """–î–æ–¥–∞—î –ø–æ–¥—ñ—é. –§–æ—Ä–º–∞—Ç —á–∞—Å—É: 'YYYY-MM-DD HH:MM'."""
        try:
            event_time = datetime.strptime(time, '%Y-%m-%d %H:%M')
            if event_time < datetime.now():
                await interaction.response.send_message("‚ùå –ü–æ–¥—ñ—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –≤ –º–∏–Ω—É–ª–æ–º—É!")
                return
            self.events[event_time] = {
                "description": description,
                "channel_id": channel.id
            }
            await interaction.response.send_message(f"‚úÖ –ü–æ–¥—ñ—è `{description}` –¥–æ–¥–∞–Ω–∞ –Ω–∞ {event_time}. –Ø –Ω–∞–≥–∞–¥–∞—é –≤–∞–º –ø—Ä–æ —Ü–µ!")

            # –°—Ç–∞—Ä—Ç—É—î–º–æ –∑–∞–¥–∞—á—É –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
            await self.send_reminder(event_time, description, channel)

        except ValueError:
            await interaction.response.send_message("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å—É! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ 'YYYY-MM-DD HH:MM'.")

    async def send_reminder(self, event_time, description, channel):
        """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø–æ–¥—ñ—é –≤ —á–∞—Ç."""
        await asyncio.sleep((event_time - datetime.now()).total_seconds())  # –ß–µ–∫–∞—î –¥–æ –ø–æ–¥—ñ—ó
        try:
            channel = self.bot.get_channel(channel.id)
            if channel:
                await channel.send(f"üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è! –ü–æ–¥—ñ—è: {description} –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è –∑–∞—Ä–∞–∑! üéâ")
            else:
                logger.error("–ö–∞–Ω–∞–ª –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.")
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: {e}")

async def setup(bot):
    await bot.add_cog(EventScheduler(bot))
